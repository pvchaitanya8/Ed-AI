{
    "problems": {
        "prob_arr_00000000001": {
            "title": "Concatenation of Array",
            "Difficulty": "Easy",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Concatenation_of_Array.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Concatenation_of_Array_solution.py",
            "Link": "https://leetcode.com/problems/concatenation-of-array/description/",
            "Test_Cases": [
                ["1 2 1", "[1, 2, 1, 1, 2, 1]"],
                ["1 3 2 1", "[1, 3, 2, 1, 1, 3, 2, 1]"],
                ["5 6", "[5, 6, 5, 6]"],
                ["9", "[9, 9]"]
            ]
        },
        "prob_arr_00000000002": {
            "title": "Number of Good Pairs",
            "Difficulty": "Easy",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Number_of_Good_Pairs.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Number_of_Good_Pairs_solution.py",
            "Link": "https://leetcode.com/problems/number-of-good-pairs/description/",
            "Test_Cases": [
                ["1 2 3 1 1 3", "4"],
                ["1 1 1 1", "6"],
                ["1 2 3", "0"],
                ["5 5 5", "3"],
                ["100 100 100 100", "6"]
            ]
        },
        "prob_arr_00000000003": {
            "title": "Two Sum",
            "Difficulty": "Easy",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Two_sum.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Two_sum_solution.py",
            "Link": "https://leetcode.com/problems/two-sum/description/",
            "Test_Cases": [
                ["2 7 11 15\n9", "[0, 1]"],
                ["3 2 4\n6", "[1, 2]"],
                ["3 3\n6", "[0, 1]"]
            ]
        },
        "prob_arr_00000000004": {
            "title": "Maximum Subarray Sum",
            "Difficulty": "Medium",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Maximum_Subarray_Sum.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Maximum_Subarray_Sum_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["8\n-2 -3 4 -1 -2 1 5 -3", "7"],
                ["5\n1 2 3 4 5", "15"],
                ["5\n-1 -2 -3 -4 -5", "-1"],
                ["6\n-2 -3 -1 -4 -6 -5", "-1"],
                ["9\n-2 1 -3 4 -1 2 1 -5 4", "6"]
            ]
        },

        "prob_arr_00000000005": {
            "title": "Smallest Subarray with Sum >= K",
            "Difficulty": "Hard",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Smallest_Subarray_with_Sum_K.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Smallest_Subarray_with_Sum_K_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["10 15\n1 2 3 4 5 6 7 8 9 10", "2"],
                ["5 100\n1 2 3 4 5", "0"],
                ["7 7\n7 1 5 2 3 2 1", "1"],
                ["5 11\n1 2 3 4 5", "3"],
                ["8 21\n5 1 3 5 10 7 4 9", "3"]
            ]
        },

        "prob_arr_00000000006": {
            "title": "Array Sum",
            "Difficulty": "Easy",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Array_Sum.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Array_Sum_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["5\n1 2 3 4 5", "15"],
                ["3\n-1 2 3", "4"]
            ]
        },

        "prob_arr_00000000007": {
            "title": "Maximum Sum of Non-Adjacent Elements",
            "Difficulty": "Hard",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Sum_of_Non-Adjacent_Elements.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Sum_of_Non-Adjacent_Elements_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["4\n3 2 7 10", "13"],
                ["5\n3 2 5 10 7", "15"],
                ["3\n3 2 7", "10"],
                ["1\n10", "10"],
                ["6\n5 5 10 100 10 5", "110"]
            ]
        },

        "prob_str_00000000001": {
            "title": "Longest Palindromic Substring",
            "Difficulty": "Medium",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Longest_Palindromic_Substring.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Longest_Palindromic_Substring_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["babad", "bab"],
                ["cbbd", "bb"],
                ["a", "a"],
                ["ac", "a"],
                ["abcdedcba", "abcdedcba"]
            ]
        },
        "prob_str_00000000002": {
            "title": "Longest Substring with At Most K Distinct Characters",
            "Difficulty": "Hard",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Longest_Substring_with_At_Most_K_Distinct_Characters.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Longest_Substring_with_At_Most_K_Distinct_Characters_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["eceba 2", "3"],
                ["aa 1", "2"],
                ["abcabcabc 2", "2"],
                ["abaccc 2", "4"],
                ["a 1", "1"],
                ["aabbcc 3", "6"],
                ["xyzzyx 1", "2"]
            ]
        },

        "prob_BIM_00000000001": {
            "title": "Single Number II",
            "Difficulty": "Medium",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Single_Number_II.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Single_Number_II_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["2 2 3 2", "3"],
                ["0 1 0 1 0 1 99", "99"],
                ["30000 500 100 30000 100 30000 100", "500"],
                ["1 1 1 2", "2"],
                ["7 7 7 -10", "-10"]
            ]
        },

        "prob_BIM_00000000002": {
            "title": "Missing Number",
            "Difficulty": "Medium",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Missing_Number.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Missing_Number_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["3 0 1", "2"],
                ["0 1", "2"],
                ["9 6 4 2 3 5 7 0 1", "8"],
                ["0", "1"],
                ["1", "0"]    
            ]
        },

        "prob_BIM_00000000003": {
            "title": "Maximum XOR of Two Numbers in an Array",
            "Difficulty": "Hard",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Maximum_XOR_of_Two_Numbers_in_an_Array.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Maximum_XOR_of_Two_Numbers_in_an_Array_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["3 10 5 25 2 8", "28"],
                ["14 70 53 83 49 91 36 80 92 51 66 70", "127"],
                ["0 0 0 0", "0"],
                ["1 2", "3"],
                ["8 1 2 12 7 6", "15"]
            ]
        },

        "prob_BIM_00000000004": {
            "title": "Counting Bits",
            "Difficulty": "Medium",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Counting_Bits.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Counting_Bits_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["2", "[0, 1, 1]"],
                ["5", "[0, 1, 1, 2, 1, 2]"],
                ["10", "[0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2]"],
                ["0", "[0]"],
                ["1", "[0, 1]"]
            ]
        },

        "prob_BIM_00000000005": {
            "title": "Single Number",
            "Difficulty": "Easy",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Single_Number.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Single_Number_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["2 2 1", "1"],
                ["4 1 2 1 2", "4"],
                ["1", "1"],
                ["7 7 8", "8"],
                ["5 5 9 9 10", "10"]
            ]
        },

        "prob_str_00000000003": {
            "title": "Valid Anagram",
            "Difficulty": "Easy",
            "Problem_Description": "Static_Files\\Practice_Page_Problems\\problem_description\\Valid_Anagram.md",
            "Problem_Solution": "Static_Files\\Practice_Page_Problems\\Problem_solutions\\Valid_Anagram_solution.py",
            "Link": "GPT GENERATED",
            "Test_Cases": [
                ["anagram nagaram", "True"],
                ["rat car", "False"],
                ["listen silent", "True"],
                ["a a", "True"],
                ["ab ba", "True"]
            ]
        }
    }
}
